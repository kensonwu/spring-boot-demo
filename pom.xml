<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.kenson</groupId>
	<artifactId>spring-boot-demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>spring-boot-demo</name>
	<url>http://maven.apache.org</url>

	<!-- spring boot 父节点依赖,引入这个之后相关的引入就不需要添加version配置，spring boot会自动选择最合适的版本进行添加。 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.4.1.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- java.version 指定jdk版本号： -->
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<!-- 添加spring-boot-starter-web依赖 -->
		<!-- spring-boot-starter-web 为我们提供了MVC， AOP的依赖包等 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- <version></version> 由于我们上面 加入了parent(spring boot)， 所以不需要再指定version了， 
				parent会直接给我们加上何时的web版本 -->
		</dependency>
		<!-- 添加fastjso的依赖包， 版本必须是1.2.xx以上 -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>1.2.83</version>
		</dependency>

		<!-- 添加springboot Devtools的依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
			<scope>true</scope>
		</dependency>

		<!-- 添加mysql 驱动依赖 -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<!-- 添加spring-data-jpa 依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- 如果在JPA已经加入的话，则可以不用引入以上的配置。 -->
		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-jdbc</artifactId> 
			</dependency> -->

		<!-- 引入thymelea依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- 引入freemarker依赖 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>


		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- 构建节点 -->
	<build>
		<plugins>
			<!-- 这里添加springloader plugin 用于热启动 -->
			<!-- <plugin> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin 
				</artifactId> <configuration> <fork>true</fork> </configuration> <dependencies> 
				springloaded hot deploy <dependency> <groupId>org.springframework</groupId> 
				<artifactId>springloaded</artifactId> <version>1.2.8.RELEASE</version> </dependency> 
				</dependencies> <executions> <execution> <goals> <goal>repackage</goal> </goals> 
				<configuration> <classifier>exec</classifier> </configuration> </execution> 
				</executions> </plugin> -->
			<!-- 添加spring-boot-maven-plugin 为 Dev tools服务 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<!--fork : 如果没有该项配置，否则devtools不会起作用，即应用不会restart -->
					<fork>true</fork>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
